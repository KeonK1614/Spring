/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.25
 * Generated at: 2024-07-18 03:07:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp._15NaverSearchAPI;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class SearchView_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js\"></script>\n");
      out.write("<script>\n");
      out.write("$(function() {\n");
      out.write("	$('#searchBtn').click(function() {\n");
      out.write("		$.ajax({\n");
      out.write("			url : \"../NaverSearchAPI.do\",\n");
      out.write("			type : \"get\",\n");
      out.write("			data : {\n");
      out.write("				keyword : $('#keyword').val(),\n");
      out.write("				startNum : $('#startNum option:selected').val()\n");
      out.write("			},\n");
      out.write("			dataType : \"json\",\n");
      out.write("			success : sucFuncJson,\n");
      out.write("			error : errFunc\n");
      out.write("		});\n");
      out.write("	});\n");
      out.write("});\n");
      out.write("\n");
      out.write("function sucFuncJson(d) {\n");
      out.write("	var str =\"\";\n");
      out.write("	$.each(d.items, function (index, item) {\n");
      out.write("		str += \"<ul>\";\n");
      out.write("		str += \"	<li>\" + (index + 1) + \"</li>\";\n");
      out.write("		str += \"	<li>\" + item.title + \"</li>\";\n");
      out.write("		str += \"	<li>\" + item.description + \"</li>\";\n");
      out.write("		str += \"	<li>\" + item.bloggername + \"</li>\";\n");
      out.write("		str += \"	<li>\" + item.bloggerlink + \"</li>\";\n");
      out.write("		str += \"	<li>\" + item.postdate + \"</li>\";\n");
      out.write("		str += \"	<li><a href=''\" + item.link + \"' target='_blank'>바로가기</a></li>\";\n");
      out.write("		str += \"</ul>\";\n");
      out.write("	});\n");
      out.write("	$('#searchResult').html(str);\n");
      out.write("}\n");
      out.write("function errFunc(e) {\n");
      out.write("	alert(\"실패: \" + e.status);\n");
      out.write("}\n");
      out.write("</script>\n");
      out.write("<style>\n");
      out.write("	ul{border : 2px #cccccc solid;}\n");
      out.write("</style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<div>\n");
      out.write("   <div>\n");
      out.write("       <form id=\"searchFrm\">\n");
      out.write("           한 페이지에 10개씩 출력됨 <br />\n");
      out.write("           <select id=\"startNum\">\n");
      out.write("               <option value=\"1\">1페이지</option>\n");
      out.write("               <option value=\"11\">2페이지</option>\n");
      out.write("               <option value=\"21\">3페이지</option>\n");
      out.write("               <option value=\"31\">4페이지</option>\n");
      out.write("               <option value=\"41\">5페이지</option>\n");
      out.write("           </select>\n");
      out.write("           <input type=\"text\" id=\"keyword\" placeholder=\"검색어를 입력하세요.\" />\n");
      out.write("           <button type=\"button\" id=\"searchBtn\">검색 요청</button>\n");
      out.write("       </form>\n");
      out.write("   </div>\n");
      out.write("   <div class=\"row\" id=\"searchResult\">\n");
      out.write("       여기에 검색 결과가 출력됩니다.\n");
      out.write("   </div>\n");
      out.write("</div>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
